{"version":3,"sources":["reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","actions/types.js","store.js","actions/projectActions.js","components/Project/AddProject.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["initialState","projects","project","project_tasks","project_task","validToken","user","combineReducers","errors","state","arguments","length","undefined","action","type","payload","Object","objectSpread","filter","projectIdentifier","backlog","projectSequence","security","initalState","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","apply","createProject","history","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","t0","response","data","stop","this","_x","AddProject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","projectName","description","start_date","end_date","onChange","bind","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","props","react_default","createElement","className","classnames","is-invalid","placeholder","Component","connect","ProjectItem","onDeleteClick","id","deleteProject","Link","to","concat","onClick","_ref4","_callee4","_context4","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","Project_CreateProjectButton","map","Project_ProjectItem","key","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8438969d.chunk.js","sourcesContent":["import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        project: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// types for backlog action\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to= {`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id} this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n\n\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AddProject from \"./components/Project/AddProject\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}